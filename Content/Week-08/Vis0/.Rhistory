install.packages("ggplot2")
library("ggplot2")
qplot
x <- c(-1, -0.8, -0.6, -0.4, -0.2, 0, 0.2, 0.4, 0.6, 0.8, 1)
y <- x^3
qplot(x, y)
x <- c(1, 2, 2, 2, 3, 3)
qplot(x, binwidth = 1)
x2 <- c(1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 4)
qplot(x2, binwidth = 1)
replicate(3, 1 + 1)
replicate(10, roll())
rolls <- replicate(10000, roll())
roll <- function() {
die <- 1:6
dice <- sample(die, size = 2, replace = TRUE)
sum(dice)
}
roll <- function() {
die <- 1:6
dice <- sample(die, size = 2, replace = TRUE,
prob = c(1/8, 1/8, 1/8, 1/8, 1/8, 3/8))
sum(dice)
}
rolls <- replicate(10000, roll())
qplot(rolls, binwidth = 1)
library(readxl)
data <- read.csv("rollingsales_queens.xlsv")
data <- read.csv("rollingsales_queens.xlsx")
my_data <- read.table(file = "rollingsales_queens.xlsx", sep = "\t", header=TRUE)
install.packages("tidyverse")
library(readxl)
brooklyn <- read_excel("rollingsales_brooklyn.xls", skip = 4)
brooklyn <- read_excel("rollingsales_brooklyn.xlsx", skip = 4)
library(tidyverse)
glimpse(brooklyn)
mean(brooklyn$`SALE PRICE`)
qplot(`SALE DATE`, data = brooklyn)
brooklyn_csv <- read.csv("rollingsales_brooklyn.csv", skip = 4)
brooklyn <- read_excel("rollingsales_brooklyn.xlsx", skip = 4)
bronx <- read_excel("rollingsales_bronx.xlsx", skip = 4)
manhattan <- read_excel("rollingsales_manhattan.xlsx", skip = 4)
staten_island <- read_excel("rollingsales_statenisland.xlsx", skip = 4)
queens <- read_excel("rollingsales_queens.xlsx", skip = 4)
NYC_property_sales <- bind_rows(brooklyn, bronx, manhattan, staten_island, queens)
glimpse(NYC_property_sales)
library(magrittr)
colnames(NYC_property_sales) %<>% str_replace_all("\\s", "_") %<>% tolower()
colnames(NYC_property_sales)
NYC_property_sales %>% glimpse()
library(ggplot2)
library(ggExtra)
install.packages("ggExtra")
library(ggplot2)
library(ggExtra)
library(ggplot2)
library(ggExtra)
install.packages(‘ggplot’)
library(ggplot2)
data("midwest", package = "ggplot2")
ggplot(midwest, aes(x=area, y=poptotal))
library(ggplot2)
ggplot(midwest, aes(x=area, y=poptotal)) + geom_point()
g <- ggplot(midwest, aes(x=area, y=poptotal)) + geom_point() + geom_smooth(method="lm")
plot(g)
g <- ggplot(midwest, aes(x=area, y=poptotal)) + geom_point() + geom_smooth(method="lm")
plot(g)
g + xlim(c(0, 0.1)) + ylim(c(0, 1000000))
g <- ggplot(midwest, aes(x=area, y=poptotal)) + geom_point() + geom_smooth(method="lm")
plot(g)
g1 <- g + coord_cartesian(xlim=c(0,0.1), ylim=c(0, 1000000))
plot(g1)
g <- ggplot(midwest, aes(x=area, y=poptotal)) + geom_point() + geom_smooth(method="lm")
g1 <- g + coord_cartesian(xlim=c(0,0.1), ylim=c(0, 1000000))
g1 + labs(title="Area Vs Population", subtitle="From midwest dataset", y="Population", x="Area", caption="Midwest Demographics")
ggplot(midwest, aes(x=area, y=poptotal)) +
geom_point(col="steelblue", size=.3) +   # Set static color and size for points
geom_smooth(method="lm", col="firebrick") +  # change the color of line
coord_cartesian(xlim=c(0, 0.1), ylim=c(0, 1000000)) +
labs(title="Area Vs Population", subtitle="From midwest dataset", y="Population", x="Area", caption="Midwest Demographics")
gg <- ggplot(midwest, aes(x=area, y=poptotal)) +
geom_point(aes(col=state), size=.3) +  # Set color to vary based on state categories.
geom_smooth(method="lm", col="firebrick", size=.2) +
coord_cartesian(xlim=c(0, 0.1), ylim=c(0, 1000000)) +
labs(title="Area Vs Population", subtitle="From midwest dataset", y="Population", x="Area", caption="Midwest Demographics")
plot(gg)
gg + theme(legend.position="None")  # remove legend
gg + scale_colour_brewer(palette = "Set1")  # change color palette
library(RColorBrewer)
head(brewer.pal.info, 10)  # show 10 palettes
library(ggplot2)
library(ggExtra)
